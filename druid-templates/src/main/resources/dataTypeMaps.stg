

literalValueMap ::= [
        "SERIAL":    {"<value>"},
        "FK":        {<value>},
        "EXCLUSIVE": {<prefix>.<value>},
        "INCLUSIVE": {<prefix>.<value>},
        "SHORT":     {<value>},
        "INTEGER":   {<value>},
        "BOOL":      {<value>},
        "LONG":      {<value>},
        "TIMESTAMP": {<value>},
        "REAL":      {<value>},
        "GUID":      {"<value>"},
        "TEXT":      {"<value>"},
        "BLOB":      {"<value>"},
        "FILE":      {"<value>"},
        "TYPE":      {"<value>"},
        default:     {"<value>"}
]

literalValue(type,value,prefix) ::= <%
<literalValueMap.(type)>
%>


javaTypeMap ::= [
        "SERIAL":"String",
        "FK"    :"long",
        "EXCLUSIVE"  :"int",
        "INCLUSIVE"  :"int",
        "SHORT":"short",
        "INTEGER":"int",
        "BOOL"  :"int",
        "LONG"  :"long",
        "TIMESTAMP":"long",
        "REAL"  :"double",
        "GUID"  :"String",
        "TEXT"  :"String",
        "BLOB"  :"byte[]",
        "FILE"  :"String",
        "TYPE"  :"String",
        "FLOAT" :"float",
        "DOUBLE":"double",
        default: key
]

androidWriteParcelMethodMap ::= [
        "SERIAL":"writeString",
        "FK"    :"writeLong",
        "EXCLUSIVE"  :"writeInt",
        "INCLUSIVE"  :"writeInt",
        "SHORT":"writeInt",
        "INTEGER":"writeInt",
        "BOOL"  :"writeInt",
        "LONG"  :"writeLong",
        "TIMESTAMP":"writeLong",
        "REAL"  :"writeDouble",
        "GUID"  :"writeString",
        "TEXT"  :"writeString",
        "BLOB"  :"writeByteArray",
        "FILE"  :"writeString",
        "TYPE"  :"writeString",
        "FLOAT" :"writeFloat",
        "DOUBLE":"writeDouble",
        default: key
]

androidReadParcelMethodMap ::= [
        "SERIAL":"readString",
        "FK"    :"readLong",
        "EXCLUSIVE"  :"readInt",
        "INCLUSIVE"  :"readInt",
        "SHORT":"readShort",
        "INTEGER":"readInt",
        "BOOL"  :"readInt",
        "LONG"  :"readLong",
        "TIMESTAMP":"readLong",
        "REAL"  :"readDouble",
        "GUID"  :"readString",
        "TEXT"  :"readString",
        "BLOB"  :"readByteArray",
        "FILE"  :"readString",
        "TYPE"  :"readString",
        "FLOAT" :"readFloat",
        "DOUBLE":"readDouble",
        default: key
]


androidReadParcelMethodTemplate(dtype,fname) ::= <%
<(androidReadParcelMethodTemplateMap.(dtype))(dtype,fname)>
%>

androidReadParcelMethodTemplateMap ::= [ 
       "BLOB": "androidReadParcelMethodTemplateProcedural", 
       default: "androidReadParcelMethodTemplateFunctional"
]

androidReadParcelMethodTemplateProcedural(dtype,fname) ::= <%
 in.<androidReadParcelMethodMap.(dtype)>(<fname.camel>);
%>

androidReadParcelMethodTemplateFunctional(dtype,fname) ::= <%
 <fname.camel> = in.<androidReadParcelMethodMap.(dtype)>();
%>


androidReadFromCursorMethodMap ::= [
        "SERIAL":"getString",
        "FK"    :"getLong",
        "EXCLUSIVE"  :"getInt",
        "INCLUSIVE"  :"getInt",
        "SHORT":"getShort",
        "INTEGER":"getInt",
        "BOOL"  :"getInt",
        "LONG"  :"getLong",
        "TIMESTAMP":"getLong",
        "REAL"  :"getDouble",
        "GUID"  :"getString",
        "TEXT"  :"getString",
        "BLOB"  :"getBlob",
        "FILE"  :"getString",
        "TYPE"  :"getString",
        "FLOAT" :"getFloat",
        "DOUBLE":"getDouble",
        default: key
]


javaMethodTypeMap ::= [
        "SERIAL":"String",
        "FK"    :"Long",
        "EXCLUSIVE"  :"Int",
        "INCLUSIVE"  :"Int",
        "SHORT":"Short",
        "INTEGER":"Int",
        "BOOL"  :"Int",
        "LONG"  :"Long",
        "TIMESTAMP":"Long",
        "REAL"  :"Double",
        "GUID"  :"String",
        "TEXT"  :"String",
        "BLOB"  :"Byte",
        "FILE"  :"String",
        "TYPE"  :"String",
        "FLOAT" :"float",
        "DOUBLE":"double",
        default: key
]


auxTupleMap ::= [ 
       "FILE": "refFileTupleTmpl", 
       "BLOB": "refBlobTupleTmpl", 
       default: "defaultTupleTmpl" 
]

auxTuple(type,value,prefix) ::= <%
<auxTupleMap.(type)>
%>

javaTypeSQLiteMap ::= [
        "SERIAL":"TEXT",
        "FK"    :"INTEGER",
        "EXCLUSIVE"  :"INTEGER",
        "INCLUSIVE"  :"INTEGER",
        "SHORT":"INTEGER",
        "INTEGER":"INTEGER",
        "BOOL"  :"INTEGER",
        "LONG"  :"INTEGER",
        "TIMESTAMP":"INTEGER",
        "REAL"  :"REAL",
        "GUID"  :"TEXT",
        "TEXT"  :"TEXT",
        "BLOB"  :"BLOB",
        "FILE"  :"TEXT",
        "TYPE"  :"TEXT",
        "FLOAT" :"REAL",
        "DOUBLE":"REAL",
        default: key
]

