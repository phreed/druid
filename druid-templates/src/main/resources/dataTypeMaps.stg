

literalValueMap ::= [
        "SERIAL":    {"<value>"},
        "FK":        {<value>},
        "EXCLUSIVE": {<prefix>.<value>},
        "INCLUSIVE": {<prefix>.<value>},
        "SHORT":     {<value>},
        "INTEGER":   {<value>},
        "BOOL":      {<value>},
        "LONG":      {<value>},
        "TIMESTAMP": {<value>},
        "REAL":      {<value>},
        "GUID":      {"<value>"},
        "TEXT":      {"<value>"},
        "BLOB":      {"<value>"},
        "FILE":      {"<value>"},
        "TYPE":      {"<value>"},
        default:     {"<value>"}
]

literalValue(type,value,prefix) ::= <%
<literalValueMap.(type)>
%>


javaTypeMap ::= [
        "SERIAL":"String",
        "FK"    :"long",
        "EXCLUSIVE"  :"int",
        "INCLUSIVE"  :"int",
        "SHORT":"short",
        "INTEGER":"int",
        "BOOL"  :"int",
        "LONG"  :"long",
        "TIMESTAMP":"long",
        "REAL"  :"double",
        "GUID"  :"String",
        "TEXT"  :"String",
        "BLOB"  :"byte[]",
        "FILE"  :"String",
        "TYPE"  :"String",
        "FLOAT      :"float",
        "DOUBLE":"double",
        default: key
]

javaTypeDefaultMap ::= [
        "SERIAL":" \"\" ",
        "FK"    :"0",
        "EXCLUSIVE"  :"0",
        "INCLUSIVE"  :"0",
        "SHORT":"0",
        "INTEGER":"0",
        "BOOL"  :"0",
        "LONG"  :"0",
        "TIMESTAMP":"0",
        "REAL"  :"0",
        "GUID"  :" \"\" ",
        "TEXT"  :" \"\" ",
        "BLOB"  :"null",
        "FILE"  :" \"\" ",
        "TYPE"  :" \"\" ",
        "FLOAT      :"0",
        "DOUBLE":"0",
        default: key
]
androidWriteParcelMethodMap ::= [
        "SERIAL":"writeString",
        "FK"    :"writeLong",
        "EXCLUSIVE"  :"writeInt",
        "INCLUSIVE"  :"writeInt",
        "SHORT":"writeInt",
        "INTEGER":"writeInt",
        "BOOL"  :"writeInt",
        "LONG"  :"writeLong",
        "TIMESTAMP":"writeLong",
        "REAL"  :"writeDouble",
        "GUID"  :"writeString",
        "TEXT"  :"writeString",
        "BLOB"  :"writeByteArray",
        "FILE"  :"writeString",
        "TYPE"  :"writeString",
        "FLOAT      :"writeFloat",
        "DOUBLE":"writeDouble",
        default: key
]

androidReadParcelMethodMap ::= [
        "SERIAL":"readString",
        "FK"    :"readLong",
        "EXCLUSIVE"  :"readInt",
        "INCLUSIVE"  :"readInt",
        "INTEGER":"readInt",
        "BOOL"  :"readInt",
        "LONG"  :"readLong",
        "TIMESTAMP":"readLong",
        "REAL"  :"readDouble",
        "GUID"  :"readString",
        "TEXT"  :"readString",
        "BLOB"  :"readByteArray",
        "FILE"  :"readString",
        "TYPE"  :"readString",
        "FLOAT      :"readFloat",
        "DOUBLE":"readDouble",
        default: key
]


androidReadParcelMethodTemplate(dtype,fname) ::= <%
<(androidReadParcelMethodTemplateMap.(dtype))(dtype,fname)>
%>

androidReadParcelMethodTemplateMap ::= [ 
       "BLOB": "androidReadParcelMethodTemplateProcedural", 
       "SHORT": "androidReadParcelMethodTemplateShortType",
       default: "androidReadParcelMethodTemplateFunctional"
]

androidReadParcelMethodTemplateShortType(dtype,fname) ::= <%
 <fname.camel> = (short) in.readInt();
%>
androidReadParcelMethodTemplateProcedural(dtype,fname) ::= <%
 in.<androidReadParcelMethodMap.(dtype)>(<fname.camel>);
%>

androidReadParcelMethodTemplateFunctional(dtype,fname) ::= <%
 <fname.camel> = in.<androidReadParcelMethodMap.(dtype)>();
%>

androidReadFromCursorMethodMap ::= [
        "SERIAL":"getString",
        "FK"    :"getLong",
        "EXCLUSIVE"  :"getInt",
        "INCLUSIVE"  :"getInt",
        "SHORT":"getShort",
        "INTEGER":"getInt",
        "BOOL"  :"getInt",
        "LONG"  :"getLong",
        "TIMESTAMP":"getLong",
        "REAL"  :"getDouble",
        "GUID"  :"getString",
        "TEXT"  :"getString",
        "BLOB"  :"getBlob",
        "FILE"  :"getString",
        "TYPE"  :"getString",
        "FLOAT      :"getFloat",
        "DOUBLE":"getDouble",
        default: key
]


javaMethodTypeMap ::= [
        "SERIAL":"String",
        "FK"    :"Long",
        "EXCLUSIVE"  :"Integer",
        "INCLUSIVE"  :"Integer",
        "SHORT":"Short",
        "INTEGER":"Integer",
        "BOOL"  :"Integer",
        "LONG"  :"Long",
        "TIMESTAMP":"Long",
        "REAL"  :"Double",
        "GUID"  :"String",
        "TEXT"  :"String",
        "BLOB"  :"Byte",
        "FILE"  :"String",
        "TYPE"  :"String",
        "FLOAT      :"Float",
        "DOUBLE":"Double",
        default: key
]


androidCreateDefaultViewTypeImportMap ::= [
        "SERIAL":"import android.widget.EditText;",
        "FK"    :"import android.widget.EditText;",
        "EXCLUSIVE"  :"import android.widget.EditText;",
        "INCLUSIVE"  :"import android.widget.EditText;",
        "SHORT":"import android.widget.EditText;",
        "INTEGER":"import android.widget.EditText;",
        "BOOL"  :"import android.widget.ToggleButton;",
        "LONG"  :"import android.widget.EditText;",
        "TIMESTAMP":"import android.widget.EditText;",
        "REAL"  :"import android.widget.EditText;",
        "GUID"  :"import android.widget.EditText;",
        "TEXT"  :"import android.widget.EditText;",
        "BLOB"  :"",
        "FILE"  :"import android.widget.EditText;",
        "TYPE"  :"import android.widget.EditText;",
        "FLOAT      :"import android.widget.EditText;",
        "DOUBLE":"import android.widget.EditText;",
        default: key
]


androidEditDefaultViewTypeImportMap ::= [
        "SERIAL":"import android.widget.EditText;",
        "FK"    :"import android.widget.EditText;",
        "EXCLUSIVE"  :"import android.widget.EditText;",
        "INCLUSIVE"  :"import android.widget.EditText;",
        "SHORT":"import android.widget.EditText;",
        "INTEGER":"import android.widget.EditText;",
        "BOOL"  :"import android.widget.ToggleButton;",
        "LONG"  :"import android.widget.EditText;",
        "TIMESTAMP":"import android.widget.EditText;",
        "REAL"  :"import android.widget.EditText;",
        "GUID"  :"import android.widget.EditText;",
        "TEXT"  :"import android.widget.EditText;",
        "BLOB"  :"",
        "FILE"  :"import android.widget.EditText;",
        "TYPE"  :"import android.widget.EditText;",
        "FLOAT      :"import android.widget.EditText;",
        "DOUBLE":"import android.widget.EditText;",
        default: key
]


androidViewDefaultViewTypeImportMap ::= [
        "SERIAL":"import android.widget.TextView;",
        "FK"    :"import android.widget.TextView;",
        "EXCLUSIVE"  :"import android.widget.TextView;",
        "INCLUSIVE"  :"import android.widget.TextView;",
        "SHORT":"import android.widget.TextView;",
        "INTEGER":"import android.widget.TextView;",
        "BOOL"  :"import android.widget.TextView;",
        "LONG"  :"import android.widget.TextView;",
        "TIMESTAMP":"import android.widget.TextView;",
        "REAL"  :"import android.widget.TextView;",
        "GUID"  :"import android.widget.TextView;",
        "TEXT"  :"import android.widget.TextView;",
        "BLOB"  :"",
        "FILE"  :"import android.widget.TextView;",
        "TYPE"  :"import android.widget.TextView;",
        "FLOAT      :"import android.widget.TextView;",
        "DOUBLE":"import android.widget.TextView;",
        default: key
]
auxTupleMap ::= [ 
       "FILE": "refFileTupleTmpl", 
       "BLOB": "refBlobTupleTmpl", 
       default: "defaultTupleTmpl" 
]

auxTuple(type,value,prefix) ::= <%
<auxTupleMap.(type)>
%>

javaTypeSQLiteMap ::= [
        "SERIAL":"TEXT",
        "FK"    :"INTEGER",
        "EXCLUSIVE"  :"INTEGER",
        "INCLUSIVE"  :"INTEGER",
        "SHORT":"INTEGER",
        "INTEGER":"INTEGER",
        "BOOL"  :"INTEGER",
        "LONG"  :"INTEGER",
        "TIMESTAMP":"INTEGER",
        "REAL"  :"REAL",
        "GUID"  :"TEXT",
        "TEXT"  :"TEXT",
        "BLOB"  :"BLOB",
        "FILE"  :"TEXT",
        "TYPE"  :"TEXT",
        "FLOAT      :"REAL",
        "DOUBLE":"REAL",
        default: key
]


uiEditGetValuesFromViewsTemplate(relation,field) ::= <%
<(uiEditGetValuesFromViewsMap.(field.dtype))(relation,field) >
%>
uiEditGetValuesFromViewsMap ::= [ 
   "INTEGER"   : "uiEditGetValuesFromViewsDefaultTemplate",
   "REAL"      : "uiEditGetValuesFromViewsDefaultTemplate",
   "GUID"      : "uiEditGetValuesFromViewsDefaultTemplate",
   "BLOB"      : "uiEditGetValuesFromViewsBLOB",
   "INCLUSIVE" : "uiEditGetValuesFromViewsDefaultTemplate",
   "BOOL"      : "uiEditGetValuesFromViewsDefaultTemplate",
   "DOUBLE"    : "uiEditGetValuesFromViewsDefaultTemplate",
   "SHORT"     : "uiEditGetValuesFromViewsDefaultTemplate",
   "FLOAT"     : "uiEditGetValuesFromViewsDefaultTemplate",
   "EXCLUSIVE" : "uiEditGetValuesFromViewsDefaultTemplate",
   "TEXT"      : "uiEditGetValuesFromViewsDefaultTemplate",
   "FK"        : "uiEditGetValuesFromViewsDefaultTemplate",
   "FILE"      : "uiEditGetValuesFromViewsDefaultTemplate",
   "LONG"      : "uiEditGetValuesFromViewsDefaultTemplate",
   "SERIAL"    : "uiEditGetValuesFromViewsDefaultTemplate",
   "TIMESTAMP" : "uiEditGetValuesFromViewsDefaultTemplate",
   "TYPE"      : "uiEditGetValuesFromViewsDefaultTemplate", 
   default: key
]
uiEditGetValuesFromViewsDefaultTemplate(relation,field) ::= <%
Editable <field.name.camel>Editable = <field.name.camel>ET.getText();
%>
uiEditGetValuesFromViewsBLOB(relation,field) ::= <%
// <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way 
%>



uiEditDisplayFieldViewToDefaultTemplate(relation,field) ::= <%
<(uiEditDisplayFieldViewToDefaultMap.(field.dtype))(relation,field) >
%>
uiEditDisplayFieldViewToDefaultMap ::= [ 
   "INTEGER"    : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "REAL"       : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "GUID"       : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "BLOB"       : "uiEditDisplayFieldViewToDefaultBLOB",
   "INCLUSIVE"  : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "BOOL"       : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "DOUBLE"     : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "SHORT"      : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "FLOAT"      : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "EXCLUSIVE"  : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "TEXT"       : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "FK"         : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "FILE"       : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "LONG"       : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "SERIAL"     : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "TIMESTAMP"  : "uiEditDisplayFieldViewToDefaultDefaultTemplate",
   "TYPE"       : "uiEditDisplayFieldViewToDefaultDefaultTemplate", 
   default: key
]
uiEditDisplayFieldViewToDefaultDefaultTemplate(relation,field) ::= <%
<field.name.camel>ET.setText(""+ <javaTypeDefaultMap.(field.dtype)>);
%>
uiEditDisplayFieldViewToDefaultBLOB(relation,field)  ::= <%
 // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way 
%>



uiEditDisplayFieldDeclarationTemplate(relation,field) ::= <%
<(uiEditDisplayFieldDeclarationMap.(field.dtype))(relation,field) >
%>
uiEditDisplayFieldDeclarationMap ::= [ 
   "INTEGER"    : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "REAL"       : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "GUID"       : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "BLOB"       : "uiEditDisplayFieldDeclarationBLOB",
   "INCLUSIVE"  : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "BOOL"       : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "DOUBLE"     : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "SHORT"      : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "FLOAT"      : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "EXCLUSIVE"  : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "TEXT"       : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "FK"         : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "FILE"       : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "LONG"       : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "SERIAL"     : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "TIMESTAMP"  : "uiEditDisplayFieldDeclarationDefaultTemplate",
   "TYPE"       : "uiEditDisplayFieldDeclarationDefaultTemplate", 
   default: key
]
uiEditDisplayFieldDeclarationDefaultTemplate(relation,field) ::= <%
EditText <field.name.camel>ET;
%>
uiEditDisplayFieldDeclarationBLOB(relation,field) ::= <%
// <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way 
%>




uiEditJavaFieldDeclarationAndInitializationTemplate(relation,field) ::= <%
<(uiEditJavaFieldDeclarationAndInitializationMap.(field.dtype))(relation,field) >
%>
uiEditJavaFieldDeclarationAndInitializationMap ::= [ 
   "INTEGER"   : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "REAL"      : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "GUID"      : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "BLOB"      : "uiEditJavaFieldDeclarationAndInitializationBLOB",
   "INCLUSIVE" : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "BOOL"      : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "DOUBLE"    : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "SHORT"     : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "FLOAT"     : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "EXCLUSIVE" : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "TEXT"      : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "FK"        : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "FILE"      : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "LONG"      : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "SERIAL"    : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "TIMESTAMP" : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate",
   "TYPE"      : "uiEditJavaFieldDeclarationAndInitializationDefaultTemplate", 
   default: key
]
uiEditJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) ::= <%
<javaTypeMap.(field.dtype)> <field.name.camel> = <javaTypeDefaultMap.(field.dtype)>;
%>
uiEditJavaFieldDeclarationAndInitializationBLOB(relation,field) ::= <%
// <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way
%>



uiEditOrmConstructorFieldNameTemplate(relation,field) ::= <%
<(uiEditOrmConstructorFieldNameMap.(field.dtype))(relation,field) >
%>
uiEditOrmConstructorFieldNameMap ::= [ 
   "INTEGER"   : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "REAL"      : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "GUID"      : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "BLOB"      : "uiEditOrmConstructorFieldNameBLOB",
   "INCLUSIVE" : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "BOOL"      : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "DOUBLE"    : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "SHORT"     : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "FLOAT"     : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "EXCLUSIVE" : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "TEXT"      : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "FK"        : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "FILE"      : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "LONG"      : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "SERIAL"    : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "TIMESTAMP" : "uiEditOrmConstructorFieldNameDefaultTemplate",
   "TYPE"      : "uiEditOrmConstructorFieldNameDefaultTemplate", 
   default: key
]
uiEditOrmConstructorFieldNameDefaultTemplate(relation,field) ::= <<
<field.name.camel>
>>
uiEditOrmConstructorFieldNameBLOB(relation,field) ::= <%
null, // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way 
%>



uiEditDisplayFieldLinkToXMLTemplate(relation,field) ::= <%
<(uiEditDisplayFieldLinkToXMLMap.(field.dtype))(relation,field) > 
%>
uiEditDisplayFieldLinkToXMLMap ::= [ 
   "INTEGER"   : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "REAL"      : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "GUID"      : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "BLOB"      : "uiEditDisplayFieldLinkToXMLBLOB",
   "INCLUSIVE" : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "BOOL"      : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "DOUBLE"    : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "SHORT"     : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "FLOAT"     : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "EXCLUSIVE" : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "TEXT"      : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "FK"        : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "FILE"      : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "LONG"      : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "SERIAL"    : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "TIMESTAMP" : "uiEditDisplayFieldLinkToXMLDefaultTemplate",
   "TYPE"      : "uiEditDisplayFieldLinkToXMLDefaultTemplate", 
   default: key
]
uiEditDisplayFieldLinkToXMLDefaultTemplate(relation,field) ::= <<
<field.name.camel>ET = (EditText) getView().findViewById(R.id.<relation.name.snake>_edit_<field.name.snake>);
>>
uiEditDisplayFieldLinkToXMLBLOB(relation,field) ::= <%
// <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way 
%>




uiEditSetDisplayViewFromOrmObjectTemplate(relation,field) ::= << <(uiEditSetDisplayViewFromOrmObjectMap.(field.dtype))(relation,field) > >>
uiEditSetDisplayViewFromOrmObjectMap ::= [ 
   "INTEGER"   : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "REAL"      : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "GUID"      : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "BLOB"      : "uiEditSetDisplayViewFromOrmObjectBLOB",
   "INCLUSIVE" : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "BOOL"      : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "DOUBLE"    : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "SHORT"     : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "FLOAT"     : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "EXCLUSIVE" : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "TEXT"      : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "FK"        : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "FILE"      : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "LONG"      : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "SERIAL"    : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "TIMESTAMP" : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate",
   "TYPE"      : "uiEditSetDisplayViewFromOrmObjectDefaultTemplate", 
   default: key
]
uiEditSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) ::= <%
<field.name.camel>ET.setText(<javaMethodTypeMap.(field.dtype)>.valueOf( <relation.name.camel>Data.<field.name.camel>).toString());
>>
uiEditSetDisplayViewFromOrmObjectBLOB(relation,field) ::= <%
 // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way 
%> 



uiEditConvertValuesFromViewsToJavaTemplate(relation,field) ::= <%
 <(uiEditConvertValuesFromViewsToJavaMap.(field.dtype))(relation,field) > >>
uiEditConvertValuesFromViewsToJavaMap ::= [ 
   "INTEGER"   : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "REAL"      : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "GUID"      : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "BLOB"      : "uiEditConvertValuesFromViewsToJavaBLOB",
   "INCLUSIVE" : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "BOOL"      : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "DOUBLE"    : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "SHORT"     : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "FLOAT"     : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "EXCLUSIVE" : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "TEXT"      : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "FK"        : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "FILE"      : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "LONG"      : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "SERIAL"    : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "TIMESTAMP" : "uiEditConvertValuesFromViewsToJavaDefaultTemplate",
   "TYPE"      : "uiEditConvertValuesFromViewsToJavaDefaultTemplate", 
   default: key
]
uiEditConvertValuesFromViewsToJavaDefaultTemplate(relation,field) ::= <<
<field.name.camel> = <javaMethodTypeMap.(field.dtype)>.valueOf(<field.name.camel>Editable.toString());
>>
uiEditConvertValuesFromViewsToJavaBLOB(relation,field) ::= << // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way >> 



uiViewDisplayFieldViewToDefaultTemplate(relation,field) ::=  <%
 <(uiViewDisplayFieldViewToDefaultMap.(field.dtype))(relation,field) > 
%>
uiViewDisplayFieldViewToDefaultMap ::= [ 
   "INTEGER"   : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "REAL"      : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "GUID"      : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "BLOB"      : "uiViewDisplayFieldViewToDefaultBLOB",
   "INCLUSIVE" : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "BOOL"      : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "DOUBLE"    : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "SHORT"     : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "FLOAT"     : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "EXCLUSIVE" : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "TEXT"      : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "FK"        : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "FILE"      : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "LONG"      : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "SERIAL"    : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "TIMESTAMP" : "uiViewDisplayFieldViewToDefaultDefaultTemplate",
   "TYPE"      : "uiViewDisplayFieldViewToDefaultDefaultTemplate", 
   default: key
]
uiViewDisplayFieldViewToDefaultDefaultTemplate(relation,field) ::= <<
<field.name.camel>TV.setText(""+ <javaTypeDefaultMap.(field.dtype)>);
>>
uiViewDisplayFieldViewToDefaultBLOB(relation,field) ::= <%
// <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way
%> 



uiViewDisplayFieldDeclarationTemplate(relation,field) ::= <%
<(uiViewDisplayFieldDeclarationMap.(field.dtype))(relation,field) >
%>
uiViewDisplayFieldDeclarationMap ::= [ 
   "INTEGER"   : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "REAL"      : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "GUID"      : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "BLOB"      : "uiViewDisplayFieldDeclarationBLOB",
   "INCLUSIVE" : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "BOOL"      : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "DOUBLE"    : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "SHORT"     : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "FLOAT"     : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "EXCLUSIVE" : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "TEXT"      : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "FK"        : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "FILE"      : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "LONG"      : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "SERIAL"    : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "TIMESTAMP" : "uiViewDisplayFieldDeclarationDefaultTemplate",
   "TYPE"      : "uiViewDisplayFieldDeclarationDefaultTemplate", 
   default: key
]
uiViewDisplayFieldDeclarationDefaultTemplate(relation,field) ::= <<
TextView <field.name.camel>TV;
>>
uiViewDisplayFieldDeclarationBLOB(relation,field) ::= <%
// <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way
%>



uiViewSetDisplayViewFromOrmObjectTemplate(relation,field) ::= <%
<(uiViewSetDisplayViewFromOrmObjectMap.(field.dtype))(relation,field) >
%>
uiViewSetDisplayViewFromOrmObjectMap ::= [ 
   "INTEGER"   : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "REAL"      : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "GUID"      : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "BLOB"      : "uiViewSetDisplayViewFromOrmObjectBLOB",
   "INCLUSIVE" : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "BOOL"      : "uiViewSetDisplayViewFromOrmObjectBOOL",
   "DOUBLE"    : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "SHORT"     : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "FLOAT"     : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "EXCLUSIVE" : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "TEXT"      : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "FK"        : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "FILE"      : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "LONG"      : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "SERIAL"    : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "TIMESTAMP" : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate",
   "TYPE"      : "uiViewSetDisplayViewFromOrmObjectDefaultTemplate", 
   default: key
]
uiViewSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) ::= <<
<field.name.camel>TV.setText(<javaMethodTypeMap.(field.dtype)>.valueOf(<relation.name.camel>Data.<field.name.camel>).toString());
>>
uiViewSetDisplayViewFromOrmObjectBLOB(relation,field) ::= <%
// <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way
%>
uiViewSetDisplayViewFromOrmObjectBOOL(relation,field) ::= << 
final String <field.name.camel>String;
if (Integer.valueOf(<relation.name.camel>Data.<field.name.camel>) == 0){
    <field.name.camel>String = "False";
} else {
    <field.name.camel>String = "True";
}
<field.name.camel>TV.setText(<field.name.camel>String);
>> 


uiViewDisplayFieldLinkToXMLTemplate(relation,field) ::= <%
<(uiViewDisplayFieldLinkToXMLMap.(field.dtype))(relation,field) >
%>
uiViewDisplayFieldLinkToXMLMap ::= [ 
   "INTEGER"   : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "REAL"      : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "GUID"      : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "BLOB"      : "uiViewDisplayFieldLinkToXMLBLOB",
   "INCLUSIVE" : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "BOOL"      : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "DOUBLE"    : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "SHORT"     : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "FLOAT"     : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "EXCLUSIVE" : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "TEXT"      : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "FK"        : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "FILE"      : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "LONG"      : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "SERIAL"    : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "TIMESTAMP" : "uiViewDisplayFieldLinkToXMLDefaultTemplate",
   "TYPE"      : "uiViewDisplayFieldLinkToXMLDefaultTemplate", 
   default: key
]
uiViewDisplayFieldLinkToXMLDefaultTemplate(relation,field) ::= <<
<field.name.camel>TV = (TextView) getView().findViewById(R.id.<relation.name.snake>_view_value_<field.name.snake>);
>>
uiViewDisplayFieldLinkToXMLBLOB(relation,field) ::= <%
// <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way
%>



uiCreateGetValuesFromViewsTemplate(relation,field) ::= << <(uiCreateGetValuesFromViewsMap.(field.dtype))(relation,field) > >>
uiCreateGetValuesFromViewsMap ::= [ 
   "INTEGER"   : "uiCreateGetValuesFromViewsINTEGER",
   "REAL"      : "uiCreateGetValuesFromViewsREAL",
   "GUID"      : "uiCreateGetValuesFromViewsGUID",
   "BLOB"      : "uiCreateGetValuesFromViewsBLOB",
   "INCLUSIVE" : "uiCreateGetValuesFromViewsINCLUSIVE",
   "BOOL"      : "uiCreateGetValuesFromViewsBOOL",
   "DOUBLE"    : "uiCreateGetValuesFromViewsDOUBLE",
   "SHORT"     : "uiCreateGetValuesFromViewsSHORT",
   "FLOAT"     : "uiCreateGetValuesFromViewsFLOAT",
   "EXCLUSIVE" : "uiCreateGetValuesFromViewsEXCLUSIVE",
   "TEXT"      : "uiCreateGetValuesFromViewsTEXT",
   "FK"        : "uiCreateGetValuesFromViewsFK",
   "FILE"      : "uiCreateGetValuesFromViewsFILE",
   "LONG"      : "uiCreateGetValuesFromViewsLONG",
   "SERIAL"    : "uiCreateGetValuesFromViewsSERIAL",
   "TIMESTAMP" : "uiCreateGetValuesFromViewsTIMESTAMP",
   "TYPE"      : "uiCreateGetValuesFromViewsTYPE", 
   default: key
]
uiCreateGetValuesFromViewsDefaultTemplate(relation,field) ::= <<
Editable <field.name.camel>Createable = <field.name.camel>ET.getText();
>>
uiCreateGetValuesFromViewsINTEGER(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsREAL(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsGUID(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsBLOB(relation,field) ::= << // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way >> 
uiCreateGetValuesFromViewsINCLUSIVE(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsBOOL(relation,field) ::= << 
boolean <field.name.camel>Boolean = <field.name.camel>TB.isChecked();
>> 
uiCreateGetValuesFromViewsDOUBLE(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsSHORT(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsFLOAT(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsEXCLUSIVE(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsTEXT(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsFK(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsFILE(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsLONG(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsSERIAL(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsTIMESTAMP(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >> 
uiCreateGetValuesFromViewsTYPE(relation,field) ::= << <uiCreateGetValuesFromViewsDefaultTemplate(relation,field) > >>  


uiCreateDisplayFieldViewToDefaultTemplate(relation,field) ::= << <(uiCreateDisplayFieldViewToDefaultMap.(field.dtype))(relation,field) > >>
uiCreateDisplayFieldViewToDefaultMap ::= [ 
   "INTEGER"   : "uiCreateDisplayFieldViewToDefaultINTEGER",
   "REAL"      : "uiCreateDisplayFieldViewToDefaultREAL",
   "GUID"      : "uiCreateDisplayFieldViewToDefaultGUID",
   "BLOB"      : "uiCreateDisplayFieldViewToDefaultBLOB",
   "INCLUSIVE" : "uiCreateDisplayFieldViewToDefaultINCLUSIVE",
   "BOOL"      : "uiCreateDisplayFieldViewToDefaultBOOL",
   "DOUBLE"    : "uiCreateDisplayFieldViewToDefaultDOUBLE",
   "SHORT"     : "uiCreateDisplayFieldViewToDefaultSHORT",
   "FLOAT"     : "uiCreateDisplayFieldViewToDefaultFLOAT",
   "EXCLUSIVE" : "uiCreateDisplayFieldViewToDefaultEXCLUSIVE",
   "TEXT"      : "uiCreateDisplayFieldViewToDefaultTEXT",
   "FK"        : "uiCreateDisplayFieldViewToDefaultFK",
   "FILE"      : "uiCreateDisplayFieldViewToDefaultFILE",
   "LONG"      : "uiCreateDisplayFieldViewToDefaultLONG",
   "SERIAL"    : "uiCreateDisplayFieldViewToDefaultSERIAL",
   "TIMESTAMP" : "uiCreateDisplayFieldViewToDefaultTIMESTAMP",
   "TYPE"      : "uiCreateDisplayFieldViewToDefaultTYPE", 
   default: key
]
uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) ::= <<
<field.name.camel>ET.setText(""+ <javaTypeDefaultMap.(field.dtype)>);
>>
uiCreateDisplayFieldViewToDefaultINTEGER(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultREAL(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultGUID(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultBLOB(relation,field) ::= << // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way >> 
uiCreateDisplayFieldViewToDefaultINCLUSIVE(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultBOOL(relation,field) ::= << 
<field.name.camel>TB.setPressed(false);
>> 
uiCreateDisplayFieldViewToDefaultDOUBLE(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultSHORT(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultFLOAT(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultEXCLUSIVE(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultTEXT(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultFK(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultFILE(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultLONG(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultSERIAL(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultTIMESTAMP(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldViewToDefaultTYPE(relation,field) ::= << <uiCreateDisplayFieldViewToDefaultDefaultTemplate(relation,field) > >>  




uiCreateDisplayFieldDeclarationTemplate(relation,field) ::= << <(uiCreateDisplayFieldDeclarationMap.(field.dtype))(relation,field) > >>
uiCreateDisplayFieldDeclarationMap ::= [ 
   "INTEGER"   : "uiCreateDisplayFieldDeclarationINTEGER",
   "REAL"      : "uiCreateDisplayFieldDeclarationREAL",
   "GUID"      : "uiCreateDisplayFieldDeclarationGUID",
   "BLOB"      : "uiCreateDisplayFieldDeclarationBLOB",
   "INCLUSIVE" : "uiCreateDisplayFieldDeclarationINCLUSIVE",
   "BOOL"      : "uiCreateDisplayFieldDeclarationBOOL",
   "DOUBLE"    : "uiCreateDisplayFieldDeclarationDOUBLE",
   "SHORT"     : "uiCreateDisplayFieldDeclarationSHORT",
   "FLOAT"     : "uiCreateDisplayFieldDeclarationFLOAT",
   "EXCLUSIVE" : "uiCreateDisplayFieldDeclarationEXCLUSIVE",
   "TEXT"      : "uiCreateDisplayFieldDeclarationTEXT",
   "FK"        : "uiCreateDisplayFieldDeclarationFK",
   "FILE"      : "uiCreateDisplayFieldDeclarationFILE",
   "LONG"      : "uiCreateDisplayFieldDeclarationLONG",
   "SERIAL"    : "uiCreateDisplayFieldDeclarationSERIAL",
   "TIMESTAMP" : "uiCreateDisplayFieldDeclarationTIMESTAMP",
   "TYPE"      : "uiCreateDisplayFieldDeclarationTYPE", 
   default: key
]
uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) ::= <<
EditText <field.name.camel>ET;
>>
uiCreateDisplayFieldDeclarationINTEGER(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationREAL(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationGUID(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationBLOB(relation,field) ::= << // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way >> 
uiCreateDisplayFieldDeclarationINCLUSIVE(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationBOOL(relation,field) ::= << 
ToggleButton <field.name.camel>TB;
>> 
uiCreateDisplayFieldDeclarationDOUBLE(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationSHORT(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationFLOAT(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationEXCLUSIVE(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationTEXT(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationFK(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationFILE(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationLONG(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationSERIAL(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationTIMESTAMP(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldDeclarationTYPE(relation,field) ::= << <uiCreateDisplayFieldDeclarationDefaultTemplate(relation,field) > >>  




uiCreateJavaFieldDeclarationAndInitializationTemplate(relation,field) ::= << <(uiCreateJavaFieldDeclarationAndInitializationMap.(field.dtype))(relation,field) > >>
uiCreateJavaFieldDeclarationAndInitializationMap ::= [ 
   "INTEGER"   : "uiCreateJavaFieldDeclarationAndInitializationINTEGER",
   "REAL"      : "uiCreateJavaFieldDeclarationAndInitializationREAL",
   "GUID"      : "uiCreateJavaFieldDeclarationAndInitializationGUID",
   "BLOB"      : "uiCreateJavaFieldDeclarationAndInitializationBLOB",
   "INCLUSIVE" : "uiCreateJavaFieldDeclarationAndInitializationINCLUSIVE",
   "BOOL"      : "uiCreateJavaFieldDeclarationAndInitializationBOOL",
   "DOUBLE"    : "uiCreateJavaFieldDeclarationAndInitializationDOUBLE",
   "SHORT"     : "uiCreateJavaFieldDeclarationAndInitializationSHORT",
   "FLOAT"     : "uiCreateJavaFieldDeclarationAndInitializationFLOAT",
   "EXCLUSIVE" : "uiCreateJavaFieldDeclarationAndInitializationEXCLUSIVE",
   "TEXT"      : "uiCreateJavaFieldDeclarationAndInitializationTEXT",
   "FK"        : "uiCreateJavaFieldDeclarationAndInitializationFK",
   "FILE"      : "uiCreateJavaFieldDeclarationAndInitializationFILE",
   "LONG"      : "uiCreateJavaFieldDeclarationAndInitializationLONG",
   "SERIAL"    : "uiCreateJavaFieldDeclarationAndInitializationSERIAL",
   "TIMESTAMP" : "uiCreateJavaFieldDeclarationAndInitializationTIMESTAMP",
   "TYPE"      : "uiCreateJavaFieldDeclarationAndInitializationTYPE", 
   default: key
]
uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) ::= <<
<javaTypeMap.(field.dtype)> <field.name.camel> = <javaTypeDefaultMap.(field.dtype)>;
>>
uiCreateJavaFieldDeclarationAndInitializationINTEGER(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationREAL(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationGUID(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationBLOB(relation,field) ::= << // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way >> 
uiCreateJavaFieldDeclarationAndInitializationINCLUSIVE(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationBOOL(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationDOUBLE(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationSHORT(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationFLOAT(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationEXCLUSIVE(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationTEXT(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationFK(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationFILE(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationLONG(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationSERIAL(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationTIMESTAMP(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >> 
uiCreateJavaFieldDeclarationAndInitializationTYPE(relation,field) ::= << <uiCreateJavaFieldDeclarationAndInitializationDefaultTemplate(relation,field) > >>  





uiCreateOrmConstructorFieldNameTemplate(relation,field) ::= << <(uiCreateOrmConstructorFieldNameMap.(field.dtype))(relation,field) > >>
uiCreateOrmConstructorFieldNameMap ::= [ 
   "INTEGER"   : "uiCreateOrmConstructorFieldNameINTEGER",
   "REAL"      : "uiCreateOrmConstructorFieldNameREAL",
   "GUID"      : "uiCreateOrmConstructorFieldNameGUID",
   "BLOB"      : "uiCreateOrmConstructorFieldNameBLOB",
   "INCLUSIVE" : "uiCreateOrmConstructorFieldNameINCLUSIVE",
   "BOOL"      : "uiCreateOrmConstructorFieldNameBOOL",
   "DOUBLE"    : "uiCreateOrmConstructorFieldNameDOUBLE",
   "SHORT"     : "uiCreateOrmConstructorFieldNameSHORT",
   "FLOAT"     : "uiCreateOrmConstructorFieldNameFLOAT",
   "EXCLUSIVE" : "uiCreateOrmConstructorFieldNameEXCLUSIVE",
   "TEXT"      : "uiCreateOrmConstructorFieldNameTEXT",
   "FK"        : "uiCreateOrmConstructorFieldNameFK",
   "FILE"      : "uiCreateOrmConstructorFieldNameFILE",
   "LONG"      : "uiCreateOrmConstructorFieldNameLONG",
   "SERIAL"    : "uiCreateOrmConstructorFieldNameSERIAL",
   "TIMESTAMP" : "uiCreateOrmConstructorFieldNameTIMESTAMP",
   "TYPE"      : "uiCreateOrmConstructorFieldNameTYPE", 
   default: key
]
uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) ::= <<
<field.name.camel>
>>
uiCreateOrmConstructorFieldNameINTEGER(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameREAL(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameGUID(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameBLOB(relation,field) ::= << null, // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way >> 
uiCreateOrmConstructorFieldNameINCLUSIVE(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameBOOL(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameDOUBLE(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameSHORT(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameFLOAT(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameEXCLUSIVE(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameTEXT(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameFK(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameFILE(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameLONG(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameSERIAL(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameTIMESTAMP(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >> 
uiCreateOrmConstructorFieldNameTYPE(relation,field) ::= << <uiCreateOrmConstructorFieldNameDefaultTemplate(relation,field) > >>  





uiCreateDisplayFieldLinkToXMLTemplate(relation,field) ::= << <(uiCreateDisplayFieldLinkToXMLMap.(field.dtype))(relation,field) > >>
uiCreateDisplayFieldLinkToXMLMap ::= [ 
   "INTEGER"   : "uiCreateDisplayFieldLinkToXMLINTEGER",
   "REAL"      : "uiCreateDisplayFieldLinkToXMLREAL",
   "GUID"      : "uiCreateDisplayFieldLinkToXMLGUID",
   "BLOB"      : "uiCreateDisplayFieldLinkToXMLBLOB",
   "INCLUSIVE" : "uiCreateDisplayFieldLinkToXMLINCLUSIVE",
   "BOOL"      : "uiCreateDisplayFieldLinkToXMLBOOL",
   "DOUBLE"    : "uiCreateDisplayFieldLinkToXMLDOUBLE",
   "SHORT"     : "uiCreateDisplayFieldLinkToXMLSHORT",
   "FLOAT"     : "uiCreateDisplayFieldLinkToXMLFLOAT",
   "EXCLUSIVE" : "uiCreateDisplayFieldLinkToXMLEXCLUSIVE",
   "TEXT"      : "uiCreateDisplayFieldLinkToXMLTEXT",
   "FK"        : "uiCreateDisplayFieldLinkToXMLFK",
   "FILE"      : "uiCreateDisplayFieldLinkToXMLFILE",
   "LONG"      : "uiCreateDisplayFieldLinkToXMLLONG",
   "SERIAL"    : "uiCreateDisplayFieldLinkToXMLSERIAL",
   "TIMESTAMP" : "uiCreateDisplayFieldLinkToXMLTIMESTAMP",
   "TYPE"      : "uiCreateDisplayFieldLinkToXMLTYPE", 
   default: key
]
uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) ::= <<
<field.name.camel>ET = (EditText) getView().findViewById(R.id.<relation.name.snake>_create_value_<field.name.snake>);
>>
uiCreateDisplayFieldLinkToXMLINTEGER(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLREAL(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLGUID(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLBLOB(relation,field) ::= << // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way >> 
uiCreateDisplayFieldLinkToXMLINCLUSIVE(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLBOOL(relation,field) ::= << 
<field.name.camel>TB = (ToggleButton) getView().findViewById(R.id.<relation.name.snake>_create_value_<field.name.snake>);
>> 
uiCreateDisplayFieldLinkToXMLDOUBLE(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLSHORT(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLFLOAT(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLEXCLUSIVE(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLTEXT(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLFK(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLFILE(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLLONG(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLSERIAL(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLTIMESTAMP(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >> 
uiCreateDisplayFieldLinkToXMLTYPE(relation,field) ::= << <uiCreateDisplayFieldLinkToXMLDefaultTemplate(relation,field) > >>  




uiCreateSetDisplayViewFromOrmObjectTemplate(relation,field) ::= << <(uiCreateSetDisplayViewFromOrmObjectMap.(field.dtype))(relation,field) > >>
uiCreateSetDisplayViewFromOrmObjectMap ::= [ 
   "INTEGER"   : "uiCreateSetDisplayViewFromOrmObjectINTEGER",
   "REAL"      : "uiCreateSetDisplayViewFromOrmObjectREAL",
   "GUID"      : "uiCreateSetDisplayViewFromOrmObjectGUID",
   "BLOB"      : "uiCreateSetDisplayViewFromOrmObjectBLOB",
   "INCLUSIVE" : "uiCreateSetDisplayViewFromOrmObjectINCLUSIVE",
   "BOOL"      : "uiCreateSetDisplayViewFromOrmObjectBOOL",
   "DOUBLE"    : "uiCreateSetDisplayViewFromOrmObjectDOUBLE",
   "SHORT"     : "uiCreateSetDisplayViewFromOrmObjectSHORT",
   "FLOAT"     : "uiCreateSetDisplayViewFromOrmObjectFLOAT",
   "EXCLUSIVE" : "uiCreateSetDisplayViewFromOrmObjectEXCLUSIVE",
   "TEXT"      : "uiCreateSetDisplayViewFromOrmObjectTEXT",
   "FK"        : "uiCreateSetDisplayViewFromOrmObjectFK",
   "FILE"      : "uiCreateSetDisplayViewFromOrmObjectFILE",
   "LONG"      : "uiCreateSetDisplayViewFromOrmObjectLONG",
   "SERIAL"    : "uiCreateSetDisplayViewFromOrmObjectSERIAL",
   "TIMESTAMP" : "uiCreateSetDisplayViewFromOrmObjectTIMESTAMP",
   "TYPE"      : "uiCreateSetDisplayViewFromOrmObjectTYPE", 
   default: key
]
uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) ::= <<
<field.name.camel>ET.setText(<javaMethodTypeMap.(field.dtype)>.valueOf( <relation.name.camel>Data.<field.name.camel>).toString());
>>
uiCreateSetDisplayViewFromOrmObjectINTEGER(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectREAL(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectGUID(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectBLOB(relation,field) ::= << // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way >> 
uiCreateSetDisplayViewFromOrmObjectINCLUSIVE(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectBOOL(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectDOUBLE(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectSHORT(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectFLOAT(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectEXCLUSIVE(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectTEXT(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectFK(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectFILE(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectLONG(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectSERIAL(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectTIMESTAMP(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >> 
uiCreateSetDisplayViewFromOrmObjectTYPE(relation,field) ::= << <uiCreateSetDisplayViewFromOrmObjectDefaultTemplate(relation,field) > >>  



uiCreateConvertValuesFromViewsToJavaTemplate(relation,field) ::= << <(uiCreateConvertValuesFromViewsToJavaMap.(field.dtype))(relation,field) > >>
uiCreateConvertValuesFromViewsToJavaMap ::= [ 
   "INTEGER"   : "uiCreateConvertValuesFromViewsToJavaINTEGER",
   "REAL"      : "uiCreateConvertValuesFromViewsToJavaREAL",
   "GUID"      : "uiCreateConvertValuesFromViewsToJavaGUID",
   "BLOB"      : "uiCreateConvertValuesFromViewsToJavaBLOB",
   "INCLUSIVE" : "uiCreateConvertValuesFromViewsToJavaINCLUSIVE",
   "BOOL"      : "uiCreateConvertValuesFromViewsToJavaBOOL",
   "DOUBLE"    : "uiCreateConvertValuesFromViewsToJavaDOUBLE",
   "SHORT"     : "uiCreateConvertValuesFromViewsToJavaSHORT",
   "FLOAT"     : "uiCreateConvertValuesFromViewsToJavaFLOAT",
   "EXCLUSIVE" : "uiCreateConvertValuesFromViewsToJavaEXCLUSIVE",
   "TEXT"      : "uiCreateConvertValuesFromViewsToJavaTEXT",
   "FK"        : "uiCreateConvertValuesFromViewsToJavaFK",
   "FILE"      : "uiCreateConvertValuesFromViewsToJavaFILE",
   "LONG"      : "uiCreateConvertValuesFromViewsToJavaLONG",
   "SERIAL"    : "uiCreateConvertValuesFromViewsToJavaSERIAL",
   "TIMESTAMP" : "uiCreateConvertValuesFromViewsToJavaTIMESTAMP",
   "TYPE"      : "uiCreateConvertValuesFromViewsToJavaTYPE", 
   default: key
]
uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) ::= <<
<field.name.camel> = <javaMethodTypeMap.(field.dtype)>.valueOf(<field.name.camel>Createable.toString());
>>
uiCreateConvertValuesFromViewsToJavaINTEGER(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaREAL(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaGUID(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaBLOB(relation,field) ::= << // <field.name.snake> omitted, BLOB dataType, unable to generate a reasonable UI in an automated way >> 
uiCreateConvertValuesFromViewsToJavaINCLUSIVE(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaBOOL(relation,field) ::= << 
if (<field.name.camel>Boolean == true) {
    <field.name.camel> = 1;
} else {
    <field.name.camel> = 0;
}
>> 
uiCreateConvertValuesFromViewsToJavaDOUBLE(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaSHORT(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaFLOAT(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaEXCLUSIVE(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaTEXT(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaFK(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaFILE(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaLONG(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaSERIAL(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaTIMESTAMP(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >> 
uiCreateConvertValuesFromViewsToJavaTYPE(relation,field) ::= << <uiCreateConvertValuesFromViewsToJavaDefaultTemplate(relation,field) > >>  



