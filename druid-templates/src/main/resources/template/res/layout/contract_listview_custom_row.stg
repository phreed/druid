import "dataTypeMaps.stg"

PATH(delimiter, directory, paths, contract, isSkeleton, item) ::= <%
  <directory.path><delimiter>
  <paths.src_main_resource><delimiter>
  layout<delimiter>
  <item.name.snake>_listview_custom_row.xml
%>

SKELETON(contract,item) ::= <<
>>

BODY(contract,item) ::= <<
\<?xml version="1.0" encoding="utf-8"?> <! this HAS to be first line in file !>
\<!-- ST:BODY:start -->
\<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical" >
    
    <putFieldsForDisplay(item)>
    
\</RelativeLayout>
\<!-- ST:BODY:end -->
>>

putFieldsForDisplay(relation) ::= <<

\<TextView
     android:id="@+id/<item.name.snake>_listview_custom_row_KEY_ID_textView"
     android:layout_width="wrap_content"
     android:layout_height="wrap_content"
     android:layout_alignParentTop="true"
     android:textSize="16sp"
     android:text="KEY_ID"
     android:textStyle="bold" />

\<!-- ST:putDisplayViews:start -->    
<relation.UIListViewRowLayout: { keyFieldRef | <putDisplayViews(relation, keyFieldRef)>}; separator="\n">
\<!-- ST:putDisplayViews:end -->
>>

putDisplayViews(relation,keyFieldRef) ::= <<
\<TextView
     android:id="@+id/<relation.name.snake>_listview_custom_row_<keyFieldRef.ref.snake>_textView"
     android:layout_width="wrap_content"
     android:layout_height="wrap_content"
     android:paddingLeft="20dp"
     android:text="<keyFieldRef.ref.snake>"
     android:textSize="16sp" 
     <if(keyFieldRef.predecessorRef)>android:layout_below="@+id/<relation.name.snake>_listview_custom_row_<keyFieldRef.predecessorRef.snake>_textView"
     <else>android:layout_below="@+id/<relation.name.snake>_listview_custom_row_KEY_ID_textView"
     <endif>
     />
>>


resLayoutCustomRowPutDisplayViewsDefualtTemplate(relation,field) ::= <<
>>

resLayoutCustomRowPutDisplayViewsTemplate(relation,field) ::= << <(resLayoutCustomRowPutDisplayViewsMap.(field.dtype))(relation,field) > >>

